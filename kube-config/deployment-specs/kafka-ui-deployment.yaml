apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-ui
  namespace: audience-manager-demo
  labels:
    app: kafka-ui
    component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-ui
  template:
    metadata:
      labels:
        app: kafka-ui
        component: monitoring
    spec:
      containers:
      - name: kafka-ui
        image: provectuslabs/kafka-ui:latest
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            memory: "200Mi"
            cpu: "100m"
          limits:
            memory: "400Mi"
            cpu: "500m"
        env:
        - name: KAFKA_CLUSTERS_0_NAME
          value: "audience-manager-kafka"
        - name: KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS
          value: "kafka-service:29092"
        - name: KAFKA_CLUSTERS_0_ZOOKEEPER
          value: "zookeeper-service:2181"
        - name: KAFKA_CLUSTERS_0_READONLY
          value: "false"
        - name: SERVER_SERVLET_CONTEXT_PATH
          value: "/"
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-ui-service
  namespace: audience-manager-demo
  labels:
    app: kafka-ui
    component: monitoring
spec:
  type: NodePort
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    nodePort: 30880
  selector:
    app: kafka-ui